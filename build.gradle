plugins {
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply false
    id 'org.unbroken-dome.test-sets' version '3.0.1' apply false
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.unbroken-dome.test-sets'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }
    
    tasks.withType(JavaCompile) { options.encoding = "UTF-8" }
    
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenCentral()
    }
    
    testSets {
        integrationTest { dirName = 'integration-test' }
    }
 
    project.integrationTest {
        outputs.upToDateWhen { false }
    }
 
    check.dependsOn integrationTest
    integrationTest.mustRunAfter test
 
    tasks.withType(Test) {
        reports.html.destination = file("${reporting.baseDir}/${name}")
    }
    
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }
    
    task javadocJar(type: Jar) {
        from javadoc
        classifier = 'javadoc'
    }
    
    publishing {
        publications {
            mavenJava(MavenPublication) {
                version = project.hasProperty('release') ? project.version - '-SNAPSHOT' : project.version
                
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = project.name
                    description = 'Plugin framework for Spring Boot based on pf4j.'
                    url = 'https://github.com/javaloong/kongmink-pf4j'
                    organization {
                        name = 'org.javaloong'
                        url = 'https://javaloong.org'
                    }
                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/javaloong/kongmink-pf4j/issues'
                    }
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/javaloong/kongmink-pf4j/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                    scm {
                        url = 'https://github.com/javaloong/kongmink-pf4j'
                        connection = 'scm:git:git://github.com/javaloong/kongmink-pf4j.git'
                        developerConnection = 'scm:git:ssh://git@github.com:javaloong/kongmink-pf4j.git'
                    }
                    developers {
                        developer {
                            name = 'tutunannan'
                            email = 'bd66_6@hotmail.com'
                        }
                    }
                }
                repositories {
                    maven {
                        def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots"
                        def stagingRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : stagingRepoUrl
                        credentials {
                            username sonatypeUsername
                            password sonatypePassword
                        }
                    }
                }
            }
        }
    }
    
    signing {
        sign publishing.publications.mavenJava
    }
    
    javadoc {
        options.addStringOption("charset", "UTF-8")
    }
}